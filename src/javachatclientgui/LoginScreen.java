/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javachatclientgui;

import java.net.*;
import java.io.*;

/**
 *
 * @author mike
 */
public class LoginScreen extends javax.swing.JFrame {

    /**
     * Creates new form LoginScreen
     */
    public LoginScreen() {
        initComponents();
        connectionFailedLabel.setVisible(false);
        getRootPane().setDefaultButton(connectBtn);        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        hostField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        portField = new javax.swing.JTextField();
        connectBtn = new javax.swing.JButton();
        connectionFailedLabel = new javax.swing.JLabel();
        filePortField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        defaultPortsBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel1.setText("Login");

        hostField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hostFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Host:");

        jLabel3.setText("Chat Port:");

        portField.setEditable(false);
        portField.setText("50047");
        portField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portFieldActionPerformed(evt);
            }
        });

        connectBtn.setText("Connect");
        connectBtn.setToolTipText("");
        connectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectBtnActionPerformed(evt);
            }
        });

        connectionFailedLabel.setForeground(new java.awt.Color(255, 15, 0));
        connectionFailedLabel.setText("Connection failed... Try again.");

        filePortField.setEditable(false);
        filePortField.setText("50048");
        filePortField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filePortFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("File Port:");

        defaultPortsBox.setSelected(true);
        defaultPortsBox.setText("Use Default Ports");
        defaultPortsBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defaultPortsBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hostField)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(portField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(defaultPortsBox))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(filePortField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(connectBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(connectionFailedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(hostField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(portField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(filePortField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(defaultPortsBox)
                    .addComponent(connectBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(connectionFailedLabel)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hostFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hostFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hostFieldActionPerformed

    private void portFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portFieldActionPerformed

    private void connectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectBtnActionPerformed
        connectionFailedLabel.setVisible(false);
        int chatPort = 0;
        int filePort = 0;
        String host = hostField.getText();
        
        if (host.equals("")) {
            connectionFailedLabel.setText("Please enter a host.");
            connectionFailedLabel.setVisible(true);
            return;
        }
        try {
            chatPort = Integer.parseInt(portField.getText());
            filePort = Integer.parseInt(filePortField.getText());
        }
        catch (Exception e) {
            connectionFailedLabel.setText("Please enter a valid port.");
            connectionFailedLabel.setVisible(true);
            return;
        }
        System.out.println("Attempting connection to " + host + ":" + String.valueOf(chatPort));
        try { 
            JavaChatClientGUI.socket = new Socket();
            JavaChatClientGUI.fileSocket = new Socket();
            JavaChatClientGUI.socket.connect(new InetSocketAddress(host,chatPort), 5000);
            JavaChatClientGUI.fileSocket.connect(new InetSocketAddress(host, filePort), 5000);
            //JavaChatClientGUI.fileSocket.setSoTimeout();
            JavaChatClientGUI.socket.setSoTimeout(1000);
            JavaChatClientGUI.inputStream = new DataInputStream(JavaChatClientGUI.socket.getInputStream());
            JavaChatClientGUI.outputStream = new DataOutputStream(JavaChatClientGUI.socket.getOutputStream());
            JavaChatClientGUI.fileInputStream = new DataInputStream(JavaChatClientGUI.fileSocket.getInputStream());
            JavaChatClientGUI.fileOutputStream = new DataOutputStream(JavaChatClientGUI.fileSocket.getOutputStream());
        }
        catch (IOException e) {
            connectionFailedLabel.setText("Connection failed... Try again.");
            connectionFailedLabel.setVisible(true);
            return;
        }
        System.out.println("Connected!");
        JavaChatClientGUI.running.set(true);
        AliasSelect aliasSelect = new AliasSelect();
        aliasSelect.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_connectBtnActionPerformed

    private void filePortFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filePortFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filePortFieldActionPerformed

    private void defaultPortsBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defaultPortsBoxActionPerformed
        if (!defaultPortsBox.isSelected()) {
            portField.setEditable(true);
            filePortField.setEditable(true);
            portField.setText("");
            filePortField.setText("");
        }
        else {
            portField.setEditable(false);
            filePortField.setEditable(false);
            portField.setText("50047");
            filePortField.setText("50048");
        }
    }//GEN-LAST:event_defaultPortsBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connectBtn;
    private javax.swing.JLabel connectionFailedLabel;
    private javax.swing.JCheckBox defaultPortsBox;
    private javax.swing.JTextField filePortField;
    private javax.swing.JTextField hostField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField portField;
    // End of variables declaration//GEN-END:variables
}
